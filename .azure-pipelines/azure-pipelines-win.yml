jobs:
- job: Windows_clangcl
  pool:
    vmImage: windows-2019
  timeoutInMinutes: 360
  steps:

      # Install Chocolatey (https://chocolatey.org/install#install-with-powershellexe)
  - powershell: |
      Set-ExecutionPolicy Bypass -Scope Process -Force
      iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      Write-Host "##vso[task.setvariable variable=PATH]$env:PATH"
      choco --version
    displayName: Install Chocolatey

      # Install Miniconda
  - script: |
      choco install miniconda3 --yes
      set PATH=C:\tools\miniconda3\Scripts;C:\tools\miniconda3;C:\tools\miniconda3\Library\bin;%PATH%
      echo '##vso[task.setvariable variable=PATH]%PATH%'
      set LIB=C:\tools\miniconda3\Library\lib;%LIB%
      echo '##vso[task.setvariable variable=LIB]%LIB%'
      conda --version
    displayName: Install Miniconda

      # Configure Miniconda
  - script: |
      conda config --set always_yes yes
      conda config --append channels conda-forge
      conda info
    displayName: Configure Miniconda

      # Create conda enviroment
      # Note: conda activate doesn't work here, because it creates a new shell!
  - script: |
      conda install cmake==3.14.0 ^
                    ninja ^
                    doctest==2.4.7 ^
                    nlohmann_json ^
                    xtl==0.7.5 ^
                    xsimd==10.0.0 ^
                    python=3.9
      conda list
    displayName: Install conda packages

      # Install LLVM
      # Note: LLVM distributed by conda is too old
  - script: |
      choco install llvm --yes
      set PATH=C:\Program Files\LLVM\bin;%PATH%
      echo '##vso[task.setvariable variable=PATH]%PATH%'
      clang-cl --version
    displayName: Install LLVM

      # Configure
  - script: |
      setlocal EnableDelayedExpansion
      call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
      mkdir build & cd build
      cmake -G Ninja ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_C_COMPILER=clang-cl ^
            -DCMAKE_CXX_COMPILER=clang-cl ^
            -DBUILD_TESTS=ON ^
            -DXTENSOR_USE_XSIMD=ON ^
            $(Build.SourcesDirectory)
    displayName: Configure xtensor
    workingDirectory: $(Build.BinariesDirectory)

      # Build
  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
      cmake --build . ^
            --config Release ^
            --target test_xtensor_lib ^
            -- -v
    displayName: Build xtensor
    workingDirectory: $(Build.BinariesDirectory)/build

      # Test
  - script: |
      setlocal EnableDelayedExpansion
      cd test
      .\test_xtensor_lib
    displayName: Test xtensor
    workingDirectory: $(Build.BinariesDirectory)/build/test
