steps:
- script: |
    conda config --set always_yes yes --set changeps1 no
    conda update -q conda
    conda env create --file environment-dev.yml
    source activate xtensor
    if [[ $(enable_tbb) == 1 ]]; then
      conda install tbb-devel -c conda-forge
    fi
  displayName: Install dependencies

- script: |
    source activate xtensor
    if [[ $(check_cyclic_includes)  == 1 ]]; then
      set -e
      conda install networkx -c conda-forge
      cd tools
      chmod +x check_circular.py
      ./check_circular.py
      cd ..
      set +e
    fi
  displayName: Check circular includes

- script: |
    source activate xtensor
    mkdir build
    cd build
    CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DBUILD_TESTS=ON";
    if [[ $(bound_checks) == 1 ]]; then
      CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXTENSOR_ENABLE_ASSERT=ON";
    fi
    if [[ $(column_major_layout) == 1 ]]; then
      CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DDEFAULT_COLUMN_MAJOR=ON";
    fi
    if [[ $(disable_xsimd) == 1 ]]; then
      CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXTENSOR_USE_XSIMD=OFF";
    else
      CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXTENSOR_USE_XSIMD=ON";
    fi
    if [[ $(enable_tbb) == 1 ]]; then
      CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXTENSOR_USE_TBB=ON -DTBB_INCLUDE_DIR=$CONDA_PREFIX/include -DTBB_LIBRARY=$CONDA_PREFIX/lib ..";
    fi
    if [[ $(enable_openmp) == 1 ]]; then
      CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXTENSOR_USE_OPENMP=ON";
    fi
    if [[ $(disable_exception) == 1 ]]; then
      CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXTENSOR_DISABLE_EXCEPTION=ON";
    fi
    if [[ $(enable_cpp17) == 1 ]]; then
      CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DCPP17=ON";
    fi
    if [[ $(build_benchmark) == 1 ]]; then
      CMAKE_EXTA_ARGS="$CMAKE_EXTRA_ARGS -DBUILD_BENCHMARK=ON";
    fi

    cmake -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX $CMAKE_EXTRA_ARGS $(Build.SourcesDirectory)
  displayName: Configure xtensor
  workingDirectory: $(Build.BinariesDirectory)

- script: |
    source activate xtensor
    make -j2 test_xtensor_lib
  displayName: Build xtensor
  workingDirectory: $(Build.BinariesDirectory)/build

- script: |
    source activate xtensor
    cd test
    ./test_xtensor_lib
  displayName: Test xtensor
  workingDirectory: $(Build.BinariesDirectory)/build/test
